[{"C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\index.js":"1","C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\App.js":"2","C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\api.js":"3","C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\components\\produto\\index.js":"4","C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\components\\form\\index.js":"5"},{"size":213,"mtime":1612299006292,"results":"6","hashOfConfig":"7"},{"size":699,"mtime":1612301269147,"results":"8","hashOfConfig":"7"},{"size":210,"mtime":1612299006291,"results":"9","hashOfConfig":"7"},{"size":304,"mtime":1612304595337,"results":"10","hashOfConfig":"7"},{"size":1029,"mtime":1612302628045,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"if2ded",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\index.js",[],["23","24"],"C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\App.js",["25"],"C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\api.js",[],"C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\components\\produto\\index.js",[],"C:\\Users\\tonhao\\Desktop\\NodeAvançado\\Front\\src\\components\\form\\index.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":10,"column":13,"nodeType":"32","endLine":13,"endColumn":4},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]